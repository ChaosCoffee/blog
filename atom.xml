<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://chaoscoffee.github.io/blog</id>
    <title>Gridea</title>
    <updated>2019-07-19T08:29:28.299Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://chaoscoffee.github.io/blog"/>
    <link rel="self" href="https://chaoscoffee.github.io/blog/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://chaoscoffee.github.io/blog/images/avatar.png</logo>
    <icon>https://chaoscoffee.github.io/blog/favicon.ico</icon>
    <rights>All rights reserved 2019, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[Spring Boot中整合Sharding-JDBC单库分表]]></title>
        <id>https://chaoscoffee.github.io/blog/post/spring-boot-zhong-zheng-he-sharding-jdbc-dan-ku-fen-biao</id>
        <link href="https://chaoscoffee.github.io/blog/post/spring-boot-zhong-zheng-he-sharding-jdbc-dan-ku-fen-biao">
        </link>
        <updated>2019-07-09T06:40:34.000Z</updated>
        <summary type="html"><![CDATA[<p>数据分片<br>
用于分片的数据库字段，是将数据库(表)水平拆分的关键字段。例：将订单表中的订单主键的尾数取模分片，则订单主键为分片字段。 SQL中如果无分片字段，将执行全路由，性能较差。 除了对单分片字段的支持，ShardingSphere也支持根据多个字段进行分片。</p>
]]></summary>
        <content type="html"><![CDATA[<p>数据分片<br>
用于分片的数据库字段，是将数据库(表)水平拆分的关键字段。例：将订单表中的订单主键的尾数取模分片，则订单主键为分片字段。 SQL中如果无分片字段，将执行全路由，性能较差。 除了对单分片字段的支持，ShardingSphere也支持根据多个字段进行分片。</p>
<!-- more -->
<ul>
<li>Spring Boot方式配置</li>
</ul>
<pre><code>sharding.jdbc.datasource.names=ds_master
# 数据源
sharding.jdbc.datasource.ds_master.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.ds_master.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.ds_master.url=jdbc:mysql://localhost:3306/ds_0?characterEncoding=utf-8
sharding.jdbc.datasource.ds_master.username=root
sharding.jdbc.datasource.ds_master.password=123456
# 分表配置
sharding.jdbc.config.sharding.tables.user.actual-data-nodes=ds_master.user_${0..3}
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.sharding-column=id
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.algorithm-expression=user_${id.longValue() % 4}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于]]></title>
        <id>https://chaoscoffee.github.io/blog/post/about</id>
        <link href="https://chaoscoffee.github.io/blog/post/about">
        </link>
        <updated>2019-01-25T11:09:48.000Z</updated>
        <content type="html"><![CDATA[<p>这是关于的页面，可以在这里向世界介绍你！</p>
]]></content>
    </entry>
</feed>